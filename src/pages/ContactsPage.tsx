import React, { useState } from "react";
import { Building2, ShieldCheck, FileText, Banknote, Stethoscope } from "lucide-react";

export default function UsefulLinksPage() {
  type Office = {
    city: string;
    address: string;
    phone: string;
    hours: string;
  };

  type Company = {
    name: string;
    offices: Office[];
  };

  type Department = {
    name: string;
    icon: React.JSX.Element;
    offices?: Office[];
    companies?: Company[];
  };

  const departments: Department[] = [
    {
      name: "–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –∞–ª–∏–∏ –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
      icon: <Building2 className="text-primary" />,
      offices: [
        { city: "–ê—à–∫–µ–ª–æ–Ω", address: "—É–ª. –ë–µ–Ω-–ì—É—Ä–∏–æ–Ω 1", phone: "08-6701000", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì16:00" },
        { city: "–ë–µ—ç—Ä-–®–µ–≤–∞", address: "—É–ª. –®–∞–∑–∞—Ä 31", phone: "08-6261222", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì16:00" },
        { city: "–•–∞–π—Ñ–∞", address: "—É–ª. –ü–∞–ª—å—è–º 15–∞", phone: "04-8631111", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì16:00" },
        { city: "–ì–µ—Ä—Ü–ª–∏—è", address: "—É–ª. –ê–±–∞ –≠–≤–µ–Ω 12", phone: "09-9514555", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì16:00" },
        { city: "–ò–µ—Ä—É—Å–∞–ª–∏–º", address: "—É–ª. –ö–∏–Ω–≥ –î–∂–æ—Ä–¥–∂ 33", phone: "02-6201222", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì16:00" },
        { city: "–ù–µ—Ç–∞–Ω–∏—è", address: "—É–ª. –í–∞–π—Ü–º–∞–Ω 6", phone: "09-8821111", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì16:00" },
        { city: "–†–µ—Ö–æ–≤–æ—Ç", address: "—É–ª. –ì–µ—Ä—Ü–ª—å 80", phone: "08-9392121", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì16:00" },
        { city: "–¶—Ñ–∞—Ç", address: "—É–ª. –ê—Ä–ª–æ–∑–æ—Ä–æ–≤ 10", phone: "04-6921000", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì16:00" },
        { city: "–¢–µ–ª—å-–ê–≤–∏–≤", address: "—É–ª. –°–∞–ª–∞–º–µ 53", phone: "03-7634400", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì16:00" },
        { city: "–¢–≤–µ—Ä–∏—è", address: "—É–ª. –î–∞–≤–∏–¥–∫–∞ 3", phone: "04-6731234", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì16:00" },
        { city: "–ó–∏—Ö—Ä–æ–Ω-–Ø–∞–∫–æ–≤", address: "—É–ª. –†–æ—Ç—à–∏–ª—å–¥ 34", phone: "04-6398888", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì16:00" }
      ]
    },
    {
      name: "–ú–í–î (–ú–∏—à—Ä–∞–¥ –∞-–ü–Ω–∏–º)",
      icon: <ShieldCheck className="text-primary" />,
      offices: [
        { city: "–ò–µ—Ä—É—Å–∞–ª–∏–º", address: "—É–ª. –®–ª–æ–º–æ –ê–º–±–∞—Ä 1", phone: "02-6294666", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì12:00" },
        { city: "–¢–µ–ª—å-–ê–≤–∏–≤", address: "—É–ª. –°–∞–ª–∞–º–µ 53", phone: "03-7634400", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì12:00" },
        { city: "–•–∞–π—Ñ–∞", address: "—É–ª. –ü–∞–ª—å—è–º 15", phone: "04-8633333", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì12:00" },
        { city: "–†–µ—Ö–æ–≤–æ—Ç", address: "—É–ª. –ì–µ—Ä—Ü–ª—å 80", phone: "08-9392121", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì12:00" }
      ]
    },
    {
      name: "–ë–∏—Ç—É–∞—Ö –õ–µ—É–º–∏",
      icon: <FileText className="text-primary" />,
      offices: [
        { city: "–¢–µ–ª—å-–ê–≤–∏–≤", address: "—É–ª. –ò—Ü—Ö–∞–∫ –°–∞–¥—ç 17", phone: "*6050", hours: "–í—Å‚Äì–ß—Ç: 08:30‚Äì13:00" },
        { city: "–•–∞–π—Ñ–∞", address: "—É–ª. –ü–∞–ª—å—è–º 15", phone: "*6050", hours: "–í—Å‚Äì–ß—Ç: 08:30‚Äì13:00" },
        { city: "–ë–µ—ç—Ä-–®–µ–≤–∞", address: "—É–ª. –†–∞–º–±–∞–º 6", phone: "*6050", hours: "–í—Å‚Äì–ß—Ç: 08:30‚Äì13:00" }
      ]
    },
    {
      name: "–ù–∞–ª–æ–≥–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
      icon: <Banknote className="text-primary" />,
      offices: [
        { city: "–¢–µ–ª—å-–ê–≤–∏–≤", address: "–î–µ—Ä–µ—Ö –ú–µ–Ω–∞—Ö–µ–º –ë–µ–≥–∏–Ω 125", phone: "03-7633333", hours: "–í—Å‚Äì–ß—Ç: 08:30‚Äì13:30" },
        { city: "–ò–µ—Ä—É—Å–∞–ª–∏–º", address: "—É–ª. –ö–∞–Ω—Ñ–∏ –ù–∞—à–∞—Ä–∏–º 66", phone: "02-6669999", hours: "–í—Å‚Äì–ß—Ç: 08:30‚Äì13:30" },
        { city: "–•–∞–π—Ñ–∞", address: "—É–ª. –ü–∞–ª—å—è–º 15–∞", phone: "04-8654333", hours: "–í—Å‚Äì–ß—Ç: 08:30‚Äì13:30" }
      ]
    },
    {
      name: "–ë–æ–ª—å–Ω–∏—á–Ω—ã–µ –∫–∞—Å—Å—ã",
      icon: <Stethoscope className="text-primary" />,
      companies: [
        {
          name: "–ö–ª–∞–ª–∏—Ç",
          offices: [
            { city: "–¢–µ–ª—å-–ê–≤–∏–≤", address: "—É–ª. –î–∏–∑–µ–Ω–≥–æ—Ñ 155", phone: "*2700", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì16:00" },
            { city: "–ë–µ—ç—Ä-–®–µ–≤–∞", address: "—É–ª. –†–∞–≥–æ–∑–∏–Ω 1", phone: "*2700", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì16:00" },
            { city: "–•–∞–π—Ñ–∞", address: "—É–ª. –ú–æ—à–µ –§–ª–∏–º–∞–Ω 18", phone: "*2700", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì16:00" }
          ]
        },
        {
          name: "–ú–∞–∫–∫–∞–±–∏",
          offices: [
            { city: "–ò–µ—Ä—É—Å–∞–ª–∏–º", address: "—É–ª. –Ø—Ñ—Ñ–æ 216", phone: "*3555", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì16:00" },
            { city: "–•–∞–π—Ñ–∞", address: "—É–ª. –ì–µ—Ä—Ü–ª—å 48", phone: "*3555", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì16:00" }
          ]
        },
        {
          name: "–ú–µ—É—Ö–µ–¥–µ—Ç",
          offices: [
            { city: "–ù–µ—Ç–∞–Ω–∏—è", address: "—É–ª. –ì–∞-–ê—Ü–º–∞—É—Ç 35", phone: "*3833", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì16:00" },
            { city: "–†–∞–º–∞—Ç-–ì–∞–Ω", address: "—É–ª. –ë–µ–Ω –ì—É—Ä–∏–æ–Ω 18", phone: "*3833", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì16:00" }
          ]
        },
        {
          name: "–õ–µ—É–º–∏—Ç",
          offices: [
            { city: "–ê—à–¥–æ–¥", address: "—É–ª. –ú–µ–Ω–∞—Ö–µ–º –ë–µ–≥–∏–Ω 17", phone: "*507", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì16:00" },
            { city: "–¢–≤–µ—Ä–∏—è", address: "—É–ª. –î–∞–≤–∏–¥–∫–∞ 2", phone: "*507", hours: "–í—Å‚Äì–ß—Ç: 08:00‚Äì16:00" }
          ]
        }
      ]
    }
  ];
  const [openSections, setOpenSections] = useState<Record<string, boolean>>({});
  const toggleSection = (key: string) => {
    setOpenSections((prev) => ({ ...prev, [key]: !prev[key] }));
  };

  return (
    <div className="max-w-4xl mx-auto px-4 py-10">
      <h1 className="text-3xl font-bold mb-6 text-primary">–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–µ–¥–æ–º—Å—Ç–≤</h1>
      <p className="text-gray-700 leading-relaxed mb-6">
        –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥—ë—Ç–µ –∞–¥—Ä–µ—Å–∞, —Ç–µ–ª–µ—Ñ–æ–Ω—ã –∏ —á–∞—Å—ã —Ä–∞–±–æ—Ç—ã –∫–ª—é—á–µ–≤—ã—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏–π –ò–∑—Ä–∞–∏–ª—è.
      </p>
      <div className="space-y-4">
        {departments.map((dep) => (
          <div key={dep.name} className="bg-white border rounded">
            <button
              onClick={() => toggleSection(dep.name)}
              className="w-full text-left flex items-center gap-2 p-4 font-semibold text-lg text-primary border-b hover:bg-gray-50"
            >
              {dep.icon}
              {dep.name}
            </button>
            {openSections[dep.name] && (
              <div className="p-4 space-y-3">
                {Array.isArray(dep.offices) && dep.offices.length > 0 && (
                  dep.offices
                    .sort((a, b) => a.city.localeCompare(b.city, 'ru'))
                    .map((office) => (
                      <div key={`${dep.name}-${office.city}`} className="border p-3 rounded hover:shadow-sm transition">
                        <h3 className="font-semibold text-lg text-gray-800">{office.city}</h3>
                        <p className="text-sm text-gray-700">üìç {office.address}</p>
                        <p className="text-sm text-gray-700">üìû {office.phone}</p>
                        <p className="text-sm text-gray-700">üïí {office.hours}</p>
                      </div>
                    ))
                )}

                {Array.isArray(dep.companies) && dep.companies.length > 0 && (
                  dep.companies.map((company) => (
                    <div key={company.name} className="border rounded">
                      <button
                        onClick={() => toggleSection(`${dep.name}-${company.name}`)}
                        className="w-full text-left p-3 font-semibold text-gray-700 border-b bg-gray-50 hover:bg-gray-100"
                      >
                        {company.name}
                      </button>
                      {openSections[`${dep.name}-${company.name}`] && (
                        <div className="p-3 space-y-3">
                          {company.offices.length > 0 ? (
                            company.offices
                              .sort((a, b) => a.city.localeCompare(b.city, 'ru'))
                              .map((office) => (
                                <div key={`${company.name}-${office.city}`} className="border p-3 rounded hover:shadow-sm transition">
                                  <h4 className="font-semibold text-md text-gray-800">{office.city}</h4>
                                  <p className="text-sm text-gray-700">üìç {office.address}</p>
                                  <p className="text-sm text-gray-700">üìû {office.phone}</p>
                                  <p className="text-sm text-gray-700">üïí {office.hours}</p>
                                </div>
                              ))
                          ) : (
                            <p className="text-gray-500">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –≥–æ—Ä–æ–¥–∞–º.</p>
                          )}
                        </div>
                      )}
                    </div>
                  ))
                )}

                {!dep.offices && !dep.companies && (
                  <p className="text-gray-500">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.</p>
                )}
              </div>
            )}
          </div>
        ))}
      </div>
    </div>
  );
}
